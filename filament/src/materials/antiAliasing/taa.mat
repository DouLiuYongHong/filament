material {
    name : taa,
    parameters : [
        {
            type : sampler2d,
            name : color
        },
        {
            type : sampler2d,
            name : history
        }
    ],
    variables : [
        vertex
    ],
    domain : postprocess,
    depthWrite : false,
    depthCulling : false
}

vertex {
    void postProcessVertex(inout PostProcessVertexInputs postProcess) {
        postProcess.vertex.xy = postProcess.normalizedUV;
    }
}

fragment {

void postProcess(inout PostProcessInputs postProcess) {
    highp vec2 uv = variable_vertex.xy; // interpolated to pixel center

    vec4 color = textureLod(materialParams_color, uv, 0.0);
    vec4 history = textureLod(materialParams_history, uv, 0.0);
    float alpha = 0.05;

    postProcess.color = color * alpha + history * (1.0 - alpha);
}

}
